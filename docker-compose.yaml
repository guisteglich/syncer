version: '2.1'

services:

  adminer:
    image: adminer
    restart: always
    ports:
      - 8081:8080
    networks:
      db:

  main-db:
    container_name: main-db
    image: avapolos/postgres-bdr:latest
    ports:
      - 5431:5431
    environment:
     - POSTGRES_PASSWORD=L5Pojz33jND5
     - APP_USER=moodle
     - APP_PASSWORD=gA7cyJtPZdVH
     - APP_DB=moodle
    networks:
      db:
    restart: unless-stopped

  sync-db:
    container_name: sync-db
    image: avapolos/postgres-bdr:latest
    ports:
      - 5433:5432
    environment:
     - POSTGRES_PASSWORD=L5Pojz33jND5
     - APP_USER=moodle
     - APP_PASSWORD=gA7cyJtPZdVH
     - APP_DB=moodle
    networks:
      db:
    restart: unless-stopped

  replication-bootstrapper:
    container_name: replication-bootstrapper
    image: avapolos/replication-bootstrapper:latest
    environment:
     - POSTGRES_PASSWORD=L5Pojz33jND5
     - APP_USER=moodle
     - APP_PASSWORD=gA7cyJtPZdVH
     - APP_DB=moodle
     - REPLICATION_MAIN=main-db
     - REPLICATION_SYNC=sync-db
     - REPLICATION_PASSWORD=J44eW8g6JAmk
    networks:
      db:
    depends_on:
      main-db:
        condition: service_healthy
      sync-db:
        condition: service_healthy


  moodle:
    container_name: moodle
    image: avapolos/moodle:latest
    volumes:
      - moodledata:/app/moodledata
    ports:
      - 8080:80
    environment:
      - DEBUG=true
      - DB_HOST=main-db
      - DB_NAME=moodle
      - DB_USER=moodle
      - DB_PASS=gA7cyJtPZdVH
      - REPLICATION_PEER1=main-db
      - REPLICATION_PEER2=sync-db
      - WWW_ROOT=http://localhost:8080
    networks:
      db:
    restart: unless-stopped
    depends_on:
      replication-bootstrapper:
        condition: service_completed_successfully
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:80/"]
    #   interval: 30s
    #   timeout: 20s
    #   retries: 3

  minio:
    container_name: minio
    image: minio/minio:latest
    volumes:
      - minio:/data
    ports:
      - 9000:9000
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      db:

  syncer:
    container_name: syncer
    image: avapolos/syncer
    build: .
    restart: always
    command: npm run watch
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
      - .:/app
    ports:
      - 3000:3000
    environment:
      REPLICATION_MAIN: main-db
      REPLICATION_SYNC: sync-db
      INSTANCE: IES
      DB_USER: postgres
      DB_PASSWORD: L5Pojz33jND5
      DB_NAME: moodle
      DB_HOST: main-db
      MINIO_HOST: minio
      MINIO_ACCESS_KEY: minio
      MINIO_ACCESS_KEY_SECRET: minioadmin
    networks:
      db:

networks:
  db:

volumes:
  moodledata:
  db_ies:
  db_polo:
  minio:
